using Systemhantering.Model;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using Systemhantering.DTO;
using Systemhantering.DBcontext;
using System.Text.RegularExpressions;


namespace Systemhantering.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class AuthController : ControllerBase
    {
        private readonly UserAuthContext _context;

        public AuthController(UserAuthContext context)
        {
            _context = context;
        }

        [HttpPost("register")]
        public async Task<ActionResult> Register([FromBody] UserDto request)
        {
            if (string.IsNullOrWhiteSpace(request.Password) || request.Password.Length < 8 )
            { 
                return BadRequest("lösenordet måste vara 8 tecken minst ");
            }

            if (_context.Users.Any(u => u.Username == request.Username))
            {
                return BadRequest("Användarnamnet är redan upptaget.");
            }
            var Lösenord = @"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{8,}$";
            if (!Regex.IsMatch(request.Password, Lösenord))
            {
                return BadRequest("Lösenordet måste innehålla minst en stor bokstav, en liten bokstav och en siffra.");
            }
            var passwordHash = BCrypt.Net.BCrypt.HashPassword(request.Password);

            var user = new User
            {
                Username = request.Username,
                PasswordHash = passwordHash
            };

            _context.Users.Add(user);
            await _context.SaveChangesAsync();

            return Ok("Användare registrerad!");
        }

        [HttpPost("login")]
        public async Task<IActionResult> Login([FromBody] UserDto request)
        {
            var user = await _context.Users.FirstOrDefaultAsync(u => u.Username == request.Username);
            if (user == null || !BCrypt.Net.BCrypt.Verify(request.Password, user.PasswordHash))
            {
                return Unauthorized("Fel användarnamn eller lösenord");
            }

            return Ok("Inloggning lyckades");
        }
    }
}
